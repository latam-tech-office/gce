- name: "Creating disk size: {{ instance_size }}Gb - {{ instance_disk_type }}"
  gce_pd: name={{ instance_name }} state=present zone={{ gce_zone }}
          mode="READ_WRITE"
          image={{ gce_image }}
          disk_type={{ instance_disk_type }} size_gb={{ instance_size }}
          credentials_file={{ gce_credentials_file }}
          project_id={{ gce_project_id }} service_account_email={{ gce_service_account_email }}
  tags: [ create, disk ]

- name: "Creating Instance: {{ instance_name }}"
  gce:
    instance_names: "{{ instance_name }}"
    state: "present"
    machine_type: "{{ instance_machine }}"
    zone: "{{ gce_zone }}"
    network: "{{ gce_network_name }}"
    subnetwork: "{{ gce_subnetwork_name }}"
    tags: ["{{ gce_ssh_tag }}"]
    disk_auto_delete: True
    disks:
       - name: "{{ instance_name }}"
         mode: READ_WRITE
    credentials_file: "{{ gce_credentials_file }}"
    project_id: "{{ gce_project_id }}"
    service_account_email: "{{ gce_service_account_email }}"
  register: instance_creation
  tags: [ create, compute ]

- name: "Attaching a Docker storage: {{ instance_docker_size }}Gb - {{ instance_docker_type }}"
  gce_pd:
    instance_name: "{{ instance_name }}"
    name: "{{ instance_name }}-docker"
    state: present
    mode: READ_WRITE
    disk_type: "{{ instance_docker_type }}"
    size_gb: "{{ instance_docker_size }}"
    delete_on_termination: True
    zone: "{{ gce_zone }}"
    project_id: "{{ gce_project_id }}"
    credentials_file: "{{ gce_credentials_file }}"
    service_account_email: "{{ gce_service_account_email }}"

- name: Fetching Instance IP
  set_fact: instance_public_ip={{ instance_creation.instance_data[0].public_ip }}

- name: (LOCAL) Generating a inventory for debug purposes
  local_action: template src=inventory_for_debug.j2 dest=inventory_for_debug

- name: Waiting instance to be up{{ ':' }} {{ instance_public_ip }}
  wait_for: host="{{ instance_public_ip }}" port={{ ssh_port }}
            delay=30  state=started

- name: Adding instance to a specific host group
  add_host: groups=instance_group hostname={{ instance_public_ip }}
            ansible_user={{ ssh_username }} ansible_password={{ ssh_password }}
            ansible)port={{ ssh_port }}
            instance_public_ip={{ instance_public_ip }}

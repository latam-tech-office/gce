instance_name: example
instance_machine: n1-standard-1
instance_size: 100
instance_disk_type: pd-standard
instance_docker_size: 20
instance_docker_type: pd-standard

# Red Hat Subscription to enable all the necessary packages for OpenShift
redhat_subscription_username:  # MANDATORY
redhat_subscription_password:  # MANDATORY
#redhat_subscription_pool_id:  # OPTIONAL: If this option is missing, the playbook will attemp to find automatically

# GOOGLE CLOUD ENGINE (GCE) credential file
# Those are the credentials necessary to create anything
gce_credentials_file:          # MANDATORY
gce_project_id:                # MANDATORY
gce_service_account_email:     # MANDATORY

# GOOGLE CLOUD ENGINE (GCE) specifics
gce_region: us-east1
gce_zone: "{{ gce_region }}-c"
gce_network_name: example
gce_subnetwork_name: example-subnet
gce_ssh_tag: enable-ssh
gce_network_firewall_rules:
   - { name: "{{ gce_ssh_tag }}", allow: "tcp:22", range: "0.0.0.0/0", tag: "{{ gce_ssh_tag }}" }
gce_ipv4_prefix: 192.168.0.0/16
#gce_image: rhel-7-v20170227
gce_image: rhel74-40g

ssh_username: root
ssh_password: r3dh4t1!
ssh_port: 22
#ssh_key_file: /my_home_directory/.ssh/id_rsa.pub # OPTIONAL

# (OPTIONAL) SLACK NOTIFICATION
# You may set your Slack as a notification mechanism when the installation is done
# For that, you need to generate your a token, go to your slack website
# of your channel (eg: https://redhat.slack.com/apps/)
# At the search field type: Incoming Webhooks
# (it should redirect you to a page like this: https://redhat.slack.com/apps/A0F7XDUAZ-incoming-webhooks)
# Then on the left side, click on "Add Configuration"
# In order to post to a channel, select "Privately to @<YOUR USERNAME> (you)"
# and click on button: Add Incoming WebHooks Integration
#
# It's going to generate something like
# https://hooks.slack.com/services/X0383HKJ0/GCBDGLGQM/ZQza55n0NrnnNyuqYDT8y0YU
# What you need it's just the last part to use bellow: X0383HKJ0/GCBDGLGQM/ZQza55n0NrnnNyuqYDT8y0YU
#slack_token: 
#slack_message_when_ready: "Instance on GCE is ready. ssh {{ ssh_username }}@{{ instance_public_ip }}"
